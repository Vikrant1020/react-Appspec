trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

stages:
# - stage: SONARQUBE 
#   displayName: SONARQUBE 
#   jobs:  
#   - job: Sonarqube
#     displayName: Sonarqube
#     steps:
#     - script: |
#           echo "SONARQUBE SLOT"

- stage: BUILD 
  displayName: BUILD 
  jobs:  
  - job: Build
    displayName: Build
    steps:
    
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Use Node.js'
    
    - script: |
        
        npm install
        npm run build
      displayName: 'Build React app'
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/build'  # Update the path to your build output
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy build to artifact staging directory'
      
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'react-app'
        publishLocation: 'Container'

# - stage: TEST 
#   displayName: TEST 
#   jobs:  
#   - job: Test
#     displayName: Test
#     steps:
#     - script: |
#          echo "TEST CASES"


- stage: DEPLOY 
  displayName: DEPLOY 
  jobs:  
  - job: Deploy
    displayName: Deploy
    steps:
    

    - script: |
        ls 
        pwd
    #displayName: 'Build React app'
    
    - task: AzureStaticWebApp@0
      inputs:
        app_location: '$(Build.ArtifactStagingDirectory)'
        api_location: 'api'  # If you have an API in your app
        output_location: 'build'
        azure_static_web_apps_api_token: $(STATIC_WEB_APP_TOKEN)
        app_build_command: ''  # Add your build commands if needed
        skip_app_build: true   # Set to true if you want to skip build in the pipeline
       
