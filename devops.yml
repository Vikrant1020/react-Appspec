trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: SONARQUBE 
  displayName: SONARQUBE 
  jobs:  
  - job: Sonarqube
    displayName: Sonarqube
    steps:
    - script: |
          echo "SONARQUBE SLOT"

    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'azuresonarqube'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'greensight'
        cliProjectName: 'greensight'
        cliSources: '.'
    
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Use Node.js'
  
    - script: |
        npm install
        npm run build
      displayName: 'Build React app'
    - task: SonarQubeAnalyze@5
      inputs:
        jdkversion: 'JAVA_HOME_11_X64'
    
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
          

# - stage: BUILD 
#   displayName: BUILD 
#   jobs:  
#   - job: Build
#     displayName: Build
#     steps:
    
#     - task: NodeTool@0
#       inputs:
#         versionSpec: '16.x'
#       displayName: 'Use Node.js'
    
#     - script: |
#         npm install
#         npm run build
#       displayName: 'Build React app'
    
#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(System.DefaultWorkingDirectory)/build'  # Update the path to your build output
#         Contents: '**'
#         TargetFolder: '$(Build.ArtifactStagingDirectory)'
#       displayName: 'Copy build to artifact staging directory'
      
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#         ArtifactName: 'GS'
#         publishLocation: 'Container'
        

# - stage: TEST 
#   displayName: TEST 
#   jobs:  
#   - job: Test
#     displayName: Test
#     steps:
#     - script: |
#          echo "TEST CASES"


# - stage: DEPLOY 
#   displayName: DEPLOY 
#   jobs:  
#   - job: Deploy
#     displayName: Deploy
#     steps:
    
#     - task: AzureStaticWebApp@0
#       inputs:
#         azure_static_web_apps_api_token: $(STATIC_WEB_APP_TOKEN)
#         app_location: "/" 
#         api_location: "" 
#         output_location: "build" 
#       env: # Add environment variables here
#         REACT_APP_BASE_URL: $(REACT_APP_BASE_URL)
#         REACT_APP_EN_KEY: $(REACT_APP_EN_KEY)
